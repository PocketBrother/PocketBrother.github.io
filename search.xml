<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CMD面板指令大全</title>
    <url>/2021/03/24/CMD%E9%9D%A2%E6%9D%BF%E6%8C%87%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[<p>#系统命令</p>
<table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">指令内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">cd</td>
<td align="left">设置当前改变路径</td>
</tr>
<tr>
<td align="left">dir</td>
<td align="left">查看目录组成</td>
</tr>
<tr>
<td align="left">** -v</td>
<td align="left">查看安装的工具版本</td>
</tr>
</tbody></table>
<p>#npm命令</p>
<table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">指令内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">npm init -y</td>
<td align="left">生产默认的package.json配置文件</td>
</tr>
<tr>
<td align="left">npm init</td>
<td align="left">生成之定义内容的package.json</td>
</tr>
<tr>
<td align="left">** -v</td>
<td align="left">查看安装的工具版本</td>
</tr>
<tr>
<td align="left">npm –save [npm i **]</td>
<td align="left">安装生产环境的依赖工具</td>
</tr>
<tr>
<td align="left">npm –save-dev[npm i -D **]</td>
<td align="left">安装开发环境的依赖工具</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>ES6 CLASS类</title>
    <url>/2021/03/24/ES6-CLASS%E7%B1%BB/</url>
    <content><![CDATA[<blockquote>
<h2 id="CLASS-类"><a href="#CLASS-类" class="headerlink" title="CLASS 类"></a>CLASS 类</h2><blockquote>
<p>类表达式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> Person = <span class="class"><span class="keyword">class</span> <span class="title">P</span></span>&#123;</span><br><span class="line">    <span class="title">constructor</span> (<span class="params"></span>)&#123;</span><br><span class="line">        P.a = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>类的自执行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> Person = <span class="class"><span class="keyword">class</span> <span class="title">P</span></span>&#123;</span><br><span class="line">    <span class="title">constructor</span> (<span class="params"></span>)&#123;</span><br><span class="line">        P.a = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure>
<p>基本语法<br> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">&gt; 		<span class="comment">//关键字【必须】</span></span><br><span class="line">&gt; 		<span class="function"><span class="title">constructor</span>(<span class="params">wheel, color, length, width, speed</span>)</span> &#123;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.wheel = wheel;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.color = color;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.lebgth = length;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.width = width;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.speed = speed;</span><br><span class="line">&gt; 			Car.totalCar += <span class="number">1</span>;</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(<span class="string">&#x27;一共创建了&#x27;</span> + Car.totalCar + <span class="string">&#x27;辆车&#x27;</span>)</span><br><span class="line">&gt; 		&#125;</span><br><span class="line">&gt; 		<span class="comment">//自定义方法【可选】</span></span><br><span class="line">&gt; 		<span class="function"><span class="title">speedUp</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">&gt; 			<span class="built_in">this</span>.speed += <span class="number">1</span>;</span><br><span class="line">&gt; 		&#125;</span><br><span class="line">&gt; 		<span class="comment">//静态方法[创建的实例无法调用,只可以通过类本身调用]</span></span><br><span class="line">&gt; 		<span class="keyword">static</span> <span class="function"><span class="title">repair</span>(<span class="params">car</span>)</span> &#123;</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(<span class="string">`开始修理`</span>);</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(car);</span><br><span class="line">&gt; 			<span class="keyword">if</span> (!car.speed) &#123;</span><br><span class="line">&gt; 				car.speed = <span class="number">0</span></span><br><span class="line">&gt; 			&#125;</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(<span class="string">`修理结束`</span>);</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(car);</span><br><span class="line">&gt; 		&#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; 		<span class="comment">//自检程序</span></span><br><span class="line">&gt; 		<span class="function"><span class="title">checker</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(<span class="string">&#x27;开始自检&#x27;</span>);</span><br><span class="line">&gt; 			<span class="keyword">if</span> (<span class="built_in">this</span>.errors === <span class="number">0</span>) &#123;</span><br><span class="line">&gt; 				<span class="built_in">console</span>.log(<span class="string">&#x27;检测完毕,一切正常&#x27;</span>)</span><br><span class="line">&gt; 			&#125;</span><br><span class="line">&gt; 		&#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; 		<span class="comment">//工厂检察院</span></span><br><span class="line">&gt; 		<span class="keyword">static</span> <span class="function"><span class="title">checker</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">&gt; 			<span class="built_in">console</span>.log(<span class="string">&#x27;我是市场检察员&#x27;</span>)</span><br><span class="line">&gt; 		&#125;</span><br><span class="line">&gt; 	&#125;</span><br><span class="line">&gt; 	<span class="comment">//设置静态属性[通过类名.方式设置]</span></span><br><span class="line">&gt; 	Car.totalCar = <span class="number">0</span>;</span><br><span class="line">&gt; 	<span class="keyword">let</span> maycar = <span class="keyword">new</span> Car(<span class="number">3</span>, <span class="string">&#x27;红色&#x27;</span>, <span class="number">20</span>, <span class="number">40</span>);</span><br><span class="line">&gt; 	<span class="keyword">let</span> maycar2 = <span class="keyword">new</span> Car(<span class="number">3</span>, <span class="string">&#x27;红色&#x27;</span>, <span class="number">20</span>, <span class="number">40</span>);</span><br><span class="line">&gt; 	<span class="keyword">let</span> maycar3 = <span class="keyword">new</span> Car(<span class="number">3</span>, <span class="string">&#x27;红色&#x27;</span>, <span class="number">20</span>, <span class="number">40</span>);</span><br><span class="line">&gt; 	maycar.checker();<span class="comment">//调用共用方法</span></span><br><span class="line">&gt; 	Car.checker();<span class="comment">//调用静态方法</span></span><br><span class="line">&gt; 	Car.repair(maycar)</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">类的基本用法--静态属性和方法</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&#x2F;&#x2F;音乐播放器</span><br><span class="line">class AudioPlayer &#123;</span><br><span class="line">    constructor (container)&#123;</span><br><span class="line">        this.container &#x3D; document.querySelector(container);</span><br><span class="line">        this.songList&#x3D;[];</span><br><span class="line">        this.dom &#x3D; null;</span><br><span class="line">        this.status &#x3D; 0</span><br><span class="line">        this.audio &#x3D; new Audio();</span><br><span class="line">        this.getSongs();</span><br><span class="line">        this.createElement();</span><br><span class="line">        this.bindEvents();</span><br><span class="line">        this.render()</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;歌曲信息</span><br><span class="line">    getSongs()&#123;</span><br><span class="line">        this.songList &#x3D; [</span><br><span class="line">            &#123;</span><br><span class="line">                cover:&#39;&#39;,&#x2F;&#x2F;封面</span><br><span class="line">       			url:&#39;.mp3&#39;,&#x2F;&#x2F;地址</span><br><span class="line">                singer:&#123;&#125;,&#x2F;&#x2F;歌手信息</span><br><span class="line">                name:&#39;&#39;&#x2F;&#x2F;歌名</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;生产dom</span><br><span class="line">    createElement()&#123;</span><br><span class="line">        const div &#x3D; document.createElement(&#39;div&#39;);</span><br><span class="line">        div.innerHTML &#x3D; &#96;&lt;div class&#x3D;&quot;btn&quot;&gt;播放按钮&lt;&#x2F;div&gt;&lt;div&gt;进度条&lt;&#x2F;div&gt;&#96;;</span><br><span class="line">        this.dom &#x3D; div;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;绑定事件</span><br><span class="line">    bindEvents()&#123;</span><br><span class="line">        this.dom.querySelector(&#39;.btn&#39;).addEventListener(&#39;click&#39;,res&#x3D;&gt;&#123;</span><br><span class="line">            console.log(&#39;开始播放&#39;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    render()&#123;</span><br><span class="line">        this.container.appendChild(this.dom)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> new player(&#39;#app&#39;)</span><br></pre></td></tr></table></figure></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>getter和setter</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    _name:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="keyword">get</span> <span class="title">name</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>._name;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> <span class="title">name</span>(<span class="params">val</span>)&#123;</span><br><span class="line">        <span class="built_in">this</span>._name = val</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.name;</span><br></pre></td></tr></table></figure>

<p>ES5 中为对象属性设置get和set方法  [Object.defineProperty]</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一般用法</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">&#x27;name&#x27;</span>,&#123;</span><br><span class="line">     value:<span class="number">19</span>,</span><br><span class="line">    enumerable:<span class="literal">true</span><span class="comment">//表示这个默认属性是可以被遍历的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">给对象添加get和set方法                      </span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    _name:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">&#x27;name&#x27;</span>,&#123;</span><br><span class="line">    get :<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>._name</span><br><span class="line">    &#125;</span><br><span class="line">    set :<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    	<span class="built_in">this</span>._name = val</span><br><span class="line">	&#125;</span><br><span class="line">   </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>类的继承[<a href="https://class.imooc.com/lesson/818#mid=22073">https://class.imooc.com/lesson/818#mid=22073</a>]</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name,age,sex,bobby</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.hobby = hobby</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">sesc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;name,age,sex,age&#125; = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`我叫<span class="subst">$&#123;name&#125;</span>,性别<span class="subst">$&#123;sex&#125;</span>,爱好<span class="subst">$&#123;hobby&#125;</span>,今年<span class="subst">$&#123;age&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;吧唧吧唧&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FEEngineer</span> <span class="keyword">extends</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name,age,sex,bobby,skill,salary</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name,age,sex,bobby);</span><br><span class="line">        <span class="built_in">this</span>.skill = skill;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">new</span> FEEngineer(<span class="string">&#x27;刘浩&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">27</span>,<span class="string">&#x27;打游戏&#x27;</span>,[<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;h5&#x27;</span>,<span class="string">&#x27;css&#x27;</span>],<span class="string">&#x27;9k&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Markdown 语法汇总</title>
    <url>/2021/03/24/Markdown-%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>#一级标题</p>
<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h6 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a><em>斜体</em></h6><p><em>斜体2</em></p>
<p><strong>粗体</strong></p>
<p><strong>粗体2</strong></p>
<p><em><strong>粗斜体</strong></em></p>
<hr>
<p><del>删除线</del></p>
<p><u>带下划线文本</u></p>
<p>创建脚注格式类似这样 <a href="%E8%84%9A%E6%B3%A8%E5%86%85%E5%AE%B9">^脚注</a>。</p>
<ol>
<li><p>有序列表</p>
</li>
<li><p>有序列表</p>
</li>
</ol>
<ul>
<li>无序列表</li>
<li>无序列表</li>
</ul>
<ol>
<li>有序列表嵌套<ul>
<li>第一项嵌套第一个元素</li>
<li>第一项嵌套第二个元素</li>
</ul>
</li>
</ol>
<blockquote>
<p>区块1</p>
<blockquote>
<p>区块1-1</p>
<blockquote>
<p>区块1-3</p>
</blockquote>
</blockquote>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>123<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这是一个<a href="https://www.baidu.com/">链接</a></p>
<p>直接使用链接地址<a href="ttps:/www.baidu.com">ttps:/www.baidu.com</a></p>
<p>这个链接用BD作为网址变量<a href="https://www.baidu.com/">百度</a></p>
<p>![alt 图片属性文本](E:\image素材\120201 METTER +智能计量 智慧迈拓2.png)</p>
<p>![alt 图片属性文本](E:\image素材\logo_画板 1 副本 (2).png “迈拓”)</p>
<p>个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a></p>
<img src="http://static.runoob.com/images/runoob-logo.png" width="50%">

<table>
<thead>
<tr>
<th align="left">表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格1</td>
<td align="center">单元格1</td>
<td align="right">单元格</td>
</tr>
<tr>
<td align="left">单元格1</td>
<td align="center">单元格1</td>
<td align="right">单元格</td>
</tr>
</tbody></table>
<ol>
<li>横向流程图源码格式：<br>graph LR<br>A[方形] –&gt;B(圆角)<br> B –&gt; C{条件}<br> C –&gt;|a=1| D[结果1]<br> C –&gt;|a=2| E[结果2]<br> F[横向流程图]<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 竖向流程图源码格式:</span><br><span class="line">​&#96;&#96;&#96;mermaid</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure></li>
<li>标准流程图源码格式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></li>
<li>标准流程图源码格式（横向）：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></li>
<li>UML时序图源码样例：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure></li>
<li>UML时序图源码复杂样例：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure></li>
<li>UML标准时序图样例：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure></li>
<li>甘特图样例:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>hexo 指令大全</title>
    <url>/2021/08/02/hexo-%E6%8C%87%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[<h2 id="本地启动hexo"><a href="#本地启动hexo" class="headerlink" title="本地启动hexo"></a>本地启动hexo</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<h2 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;文件名&quot;</span><br></pre></td></tr></table></figure>
<h2 id="hexo部署"><a href="#hexo部署" class="headerlink" title="hexo部署"></a>hexo部署</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>判断苹果手机型号</title>
    <url>/2021/08/02/%E5%88%A4%E6%96%AD%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E5%9E%8B%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="工作中所用到的对于-iPhone-各类机型的准确识别"><a href="#工作中所用到的对于-iPhone-各类机型的准确识别" class="headerlink" title="工作中所用到的对于 iPhone 各类机型的准确识别"></a>工作中所用到的对于 iPhone 各类机型的准确识别</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断是否为IOS</span></span><br><span class="line"><span class="keyword">var</span> isIOS =</span><br><span class="line">  /^(iPhone|iPad|iPod|Pike)/gi.test(navigator.platform) ||</span><br><span class="line">  !!userAgent.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断微信：</span></span><br><span class="line"><span class="keyword">var</span> isWeiXin = <span class="regexp">/MicroMessenger/i</span>.test(navigator.userAgent);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断安卓：</span></span><br><span class="line"><span class="keyword">var</span> isAndroid = userAgent.indexOf(<span class="string">&quot;Android&quot;</span>) &gt; -<span class="number">1</span> || userAgent.indexOf(<span class="string">&quot;Adr&quot;</span>) &gt; -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断PC端：</span></span><br><span class="line"><span class="keyword">var</span> isPC = <span class="regexp">/^(Win)/ig</span>.test(navigator.platform) || userAgent.indexOf(<span class="string">&quot;Windows NT &quot;</span>) &gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//iPhone 6/6s/7/8</span></span><br><span class="line"><span class="keyword">let</span> isIPhone6 =</span><br><span class="line">  /iphone/gi.test(<span class="built_in">window</span>.navigator.userAgent) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio === <span class="number">3</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.width === <span class="number">375</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.height === <span class="number">667</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//iPhone 6p/6sp/7p</span></span><br><span class="line"><span class="keyword">let</span> isIPhone6p =</span><br><span class="line">  /iphone/gi.test(<span class="built_in">window</span>.navigator.userAgent) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio === <span class="number">3</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.width === <span class="number">414</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.height === <span class="number">736</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iPhone X、iPhone XS</span></span><br><span class="line"><span class="keyword">let</span> isIPhoneX =</span><br><span class="line">  /iphone/gi.test(<span class="built_in">window</span>.navigator.userAgent) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio === <span class="number">3</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.width === <span class="number">375</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.height === <span class="number">812</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iPhone XS Max</span></span><br><span class="line"><span class="keyword">let</span> isIPhoneXSMax =</span><br><span class="line">  /iphone/gi.test(<span class="built_in">window</span>.navigator.userAgent) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio === <span class="number">3</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.width === <span class="number">414</span> &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.height === <span class="number">896</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iPhone XR</span></span><br><span class="line"><span class="keyword">let</span> isIPhoneXR =</span><br><span class="line">  /iphone/gi.test(<span class="built_in">window</span>.navigator.userAgent) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.devicePixelRatio &amp;&amp;</span><br><span class="line">  (<span class="built_in">window</span>.devicePixelRatio === <span class="number">2</span>) &amp; (<span class="built_in">window</span>.screen.width === <span class="number">414</span>) &amp;&amp;</span><br><span class="line">  <span class="built_in">window</span>.screen.height === <span class="number">896</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(isIPhone6);</span><br><span class="line"><span class="built_in">console</span>.log(isIPhone6p);</span><br><span class="line"><span class="built_in">console</span>.log(isIPhoneX);</span><br><span class="line"><span class="built_in">console</span>.log(isIPhoneXSMax);</span><br><span class="line"><span class="built_in">console</span>.log(isIPhoneXR);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************End*******************************/</span></span><br></pre></td></tr></table></figure>

<p>原文链接:<a href="https://www.baidu.com/">https:/www.baidu.com</a></p>
]]></content>
  </entry>
  <entry>
    <title>路由的两种实现方式 hash和history</title>
    <url>/2021/04/07/%E8%B7%AF%E7%94%B1%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当下最流行的前端三大框架中的 React 和 Vue 都是 SPA（single page web application）单页面应用。单页面应用页面与页面之间的跳转就需要用到路由。今天就来记录一下单页面路由实现原理。<br>路由跳转主要做了二件事。</p>
<ul>
<li>浏览器地址栏地址改变；</li>
<li>页面切换到相应的内容。</li>
</ul>
<p>比如登录页面，地址栏为：localhost:8080/login。内容切换到登录页面。<br>实现单页面路由主要有两种方式，location 的 hash 对象 和 location 的 history 对象（H5 的新 PAI ）。</p>
<h1 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h1><p>通过 hash 对象改变地址栏地址时，可以用 hashchange 事件来监控页面路径 hash 变化更新页面。<br>核心步骤1：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="string">&quot;index&quot;</span>;</span><br><span class="line"><span class="built_in">window</span>.location.hash = path;</span><br></pre></td></tr></table></figure>
<p>核心步骤2:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;hashchange&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">          <span class="comment">//路由发生改变时执行的事件...</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>路由案例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>前端单页面路由<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .warp&#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:<span class="number">1px</span> solid grey;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>:<span class="number">0</span> auto;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .nav&#123;</span><br><span class="line"><span class="css">            <span class="attribute">border-bottom</span>:<span class="number">1px</span> solid grey;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">list-style</span>:none;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">15px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .router&#123;</span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">20px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;warp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;index&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;news&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;about&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span> <span class="attr">class</span>=<span class="string">&quot;router&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容加载区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//获取 DOM 元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> aList = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> root = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#root&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//路由配置</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> routers = [</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;index&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;首页&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;news&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;新闻&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;about&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;关于&quot;</span>&#125;</span></span><br><span class="line">            ];</span><br><span class="line"><span class="javascript">        <span class="comment">//更改页面视图</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params">path</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           routers.map(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">               if(path == item.path)&#123;</span><br><span class="line">                   root.innerHTML = item.component;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">//点击页面时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;aList.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">            aList[i].addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> path = <span class="built_in">this</span>[<span class="string">&quot;attributes&quot;</span>][<span class="string">&quot;data-path&quot;</span>].value;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.location.hash = <span class="string">&quot;/&quot;</span>+path;</span></span><br><span class="line">                refresh(path);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;hashchange&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oldPath = e.oldURL.split(<span class="string">&quot;#/&quot;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> newPath = e.newURL.split(<span class="string">&quot;#/&quot;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            <span class="comment">//hash值不一致时更新视图</span></span></span><br><span class="line">            if(oldPath != newPath)&#123;</span><br><span class="line">                refresh(newPath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">//浏览器刷新时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> path = <span class="string">&quot;index&quot;</span>;</span></span><br><span class="line">            if(location.hash)&#123;</span><br><span class="line">                path=location.hash.slice(2);</span><br><span class="line">            &#125;</span><br><span class="line">            refresh(path);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="history"><a href="#history" class="headerlink" title="history"></a>history</h1><p>通过 history 对象改变地址栏地址时，可以通过 popstate 事件来监控浏览器前进后退时视图变化。</p>
<ol>
<li>popstate用来做什么的？<br>核心步骤1:<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="string">&quot;index&quot;</span>;</span><br><span class="line">history.pushState(<span class="literal">null</span>,<span class="literal">null</span>,<span class="string">&#x27;#/&#x27;</span>+path);</span><br></pre></td></tr></table></figure>
核心步骤2:<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;popstate&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">          <span class="comment">//浏览器前进后退时执行的事件...</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
路由案例:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>前端单页面路由<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .warp&#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:<span class="number">1px</span> solid grey;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>:<span class="number">0</span> auto;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .nav&#123;</span><br><span class="line"><span class="css">            <span class="attribute">border-bottom</span>:<span class="number">1px</span> solid grey;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">list-style</span>:none;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">15px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .router&#123;</span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">20px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;warp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;index&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;news&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-path</span>=<span class="string">&quot;about&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span> <span class="attr">class</span>=<span class="string">&quot;router&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容加载区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//获取 DOM 元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> aList = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> root = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#root&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//路由配置</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> routers = [</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;index&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;首页&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;news&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;新闻&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">path</span>:<span class="string">&quot;about&quot;</span>,<span class="attr">component</span>:<span class="string">&quot;关于&quot;</span>&#125;</span></span><br><span class="line">            ];</span><br><span class="line"><span class="javascript">        <span class="comment">//更改页面视图</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params">path</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           routers.map(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">               if(path == item.path)&#123;</span><br><span class="line">                   root.innerHTML = item.component;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">//点击页面时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;aList.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">            aList[i].addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> path = <span class="built_in">this</span>[<span class="string">&quot;attributes&quot;</span>][<span class="string">&quot;data-path&quot;</span>].value;</span></span><br><span class="line"><span class="javascript">                history.pushState(&#123;&#125;,<span class="literal">null</span>,<span class="string">&#x27;#/&#x27;</span>+path);</span></span><br><span class="line">                refresh(path);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">//浏览器前进后退时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;popstate&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> path = location.hash.slice(<span class="number">2</span>)||<span class="string">&quot;index&quot;</span>;</span></span><br><span class="line">            refresh(path);</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">//浏览器刷新时触发</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> path = location.hash.slice(<span class="number">2</span>)||<span class="string">&quot;index&quot;</span>;</span></span><br><span class="line"><span class="javascript">            history.replaceState(&#123;&#125;,<span class="literal">null</span>,<span class="string">&#x27;#/&#x27;</span>+path);</span></span><br><span class="line">            refresh(path);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
参考文章[<a href="https://blog.csdn.net/weixin_44135121/article/details/103578650]">https://blog.csdn.net/weixin_44135121/article/details/103578650]</a></li>
</ol>
<hr>
<h1 id="补充-HTML5的popstate、pushState、replaceState如何玩转浏览器历史记录"><a href="#补充-HTML5的popstate、pushState、replaceState如何玩转浏览器历史记录" class="headerlink" title="[ 补充 ] HTML5的popstate、pushState、replaceState如何玩转浏览器历史记录"></a><font color=red>[ 补充 ]</font> HTML5的popstate、pushState、replaceState如何玩转浏览器历史记录</h1><p>一、popstate用来做什么的？</p>
<p>简而言之就是HTML5新增的用来控制浏览器历史记录的api。</p>
<p>二、过去如何操纵浏览器历史记录？</p>
<p>window.history对象，该对象上包含有length和state的两个值，在它的__proto__上继承有back、forward、go等几个功能函数<br>在popstate之前，我们可以利用back、forward、go对history进行后退和前进操作。<br>例如：<br>history.back(); (后退一步，使用history.go(-1)也可实现后退效果)<br>弊端：只能操作前进后退，但是无法控制前进后要去哪，history.length都只会维持原来的状态</p>
<p>三、popstate的怎么用？<br>HTML5的新API扩展了window.history，使历史记录点更加开放了。可以存储当前历史记录点pushState、替换当前历史记录点replaceState、监听历史记录点popstate。</p>
<p>pushState、replaceState两者用法差不多。<br>使用方法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">history.pushState(data,title,url);</span><br><span class="line"><span class="comment">//其中第一个参数data是给state的值；第二个参数title为页面的标题，但当前所有浏览器都忽略这个参数，传个空字符串就好；第三个参数url是你想要去的链接；</span></span><br></pre></td></tr></table></figure>
<p>replaceState用法类似，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">history.replaceState(<span class="string">&quot;首页&quot;</span>,<span class="string">&quot;&quot;</span>,location.href+ <span class="string">&quot;#news&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>两者区别：pushState会改变history.length，而replaceState不改变history.length</p>
<blockquote>
<p>使用场景重现：</p>
<p>1.由于业务逻辑需要：打开我项目页面链接时，如果url中携带了指定参数，初始化进入页面的时候，就显示弹窗。</p>
<p>2.页面中提供了一些其他链接的入口banner</p>
<p>3.这样如果进入页面时携带了参数，点击其中banner时，跳转到其他页面，然后点击宿主的返回按钮，一般是会取之前历史记录里的。这时回到之前页面时，还是会打开弹窗，因为页面链接里还携带着参数</p>
<p>4.解决办法，使用pushState方法，无刷新改变页面url 我只需要这样做：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> lcthref=location.href.replace(<span class="regexp">/openMyPrize=true/g</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(lcthref)</span><br><span class="line"><span class="built_in">window</span>.history.pushState(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,lcthref)</span><br></pre></td></tr></table></figure>
</blockquote>
<p>原文链接：[<a href="https://blog.csdn.net/qq_40028324/article/details/83268502]">https://blog.csdn.net/qq_40028324/article/details/83268502]</a></p>
]]></content>
  </entry>
</search>
